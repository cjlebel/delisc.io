@using Deliscio.Web.Mvc.ViewComponents.TagCloud
@model Deliscio.Web.Mvc.ViewModels.Home.HomePageViewModel

@{
    ViewBag.PageTitle = Model.PageTitle;
    ViewBag.PageDescription = Model.PageDescription;
    ViewBag.CanonicalUrl = Model.CanonicalUrl;

    var links = Model.Results;
}

<div class="d-flex flex-grow-1 me-4">
    <div id="links-container">
        @{
            await Html.RenderPartialAsync("Links/_LinkCards", links.Results);
        }
        <div id="pager-container"
             data-pageno="@links.PageNumber"
             data-size="@links.PageSize"
             data-pages="@links.TotalPages"
             data-results="@links.TotalResults"
             data-url="/links">
        </div>
    </div>
    <div class="flex-shrink-0 pe-4" style="width: 30%; max-width: 400px">
       <vc:tag-cloud count="100"></vc:tag-cloud>
    </div>
</div>

@section Scripts {
    @*         <script type="module" src="./dist/Pager.bundle.js"></script>
    <script type="module">
        var pager = new Pager({
            container: '#pager-container',
            total: @Model.TotalPages,
            page: @Model.PageNumber,
            pageSize: @Model.PageSize,
            url: '/api/links'
        });
        pager.render();
    </script> *@

    <script async type="module">

        const cardElements = document.querySelectorAll(".link-card");

        cardElements.forEach((cardElement) => {
            setCardImage(cardElement);
        });

        export function setCardImage(card) {
            if (!card) return;

            const img = card.querySelector("img");
            const dataSrc = img.getAttribute("data-src");
            const noImage = '/imgs/no-image-found.png';

            let newSrc = noImage;

            if (dataSrc) {
                if (dataSrc.startsWith('http')) {
                    if (dataSrc.indexOf('duckduckgo') >= 0) {
                        newSrc = '/imgs/duckduckgo-logo.jpg';
                    }
                    else if (dataSrc.indexOf('google') >= 0) {
                        newSrc = '/imgs/google-logo.jpg';
                    }
                    else if (dataSrc.indexOf('reddit') >= 0) {
                        newSrc = '/imgs/reddit-logo.png';
                    }
                    else {
                        newSrc = dataSrc;
                    }  
                }
            }

            img.setAttribute("src", newSrc);

            img.onerror = function () {
                ///console.error(`Error loading image from ${src}`);
                console.log(`Error loading image from ${dataSrc}`);

                img.setAttribute("src", noImage);
            };   

            //img.setAttribute("data-src", "");

            const cardWidth = card.clientWidth;
            const cardHeight = card.clientHeight;
            const imgWidth = img.clientWidth;
            const imgHeight = img.clientHeight;
            const imgRatio = imgWidth / imgHeight;
            const cardRatio = cardWidth / cardHeight;

            if (imgRatio > cardRatio) {
                img.style.width = "100%";
                img.style.height = "auto";
            } else {
                img.style.width = "auto";
                img.style.height = "100%";
            }
        }
    </script>
}